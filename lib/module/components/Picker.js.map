{"version":3,"sources":["Picker.tsx"],"names":["React","useState","useRef","useEffect","View","StyleSheet","Pressable","ScrollView","Text","Animated","colors","Label","Modal","Picker","props","selectedValue","setSelectedValue","showPicker","setShowPicker","position","setPosition","x","y","width","height","animatedBottom","setAnimatedBottom","Value","shouldAnimate","setShouldAnimate","pickerRef","handlePress","floatingLabel","timing","toValue","useNativeDriver","duration","start","current","measureInWindow","label","labelStyle","labelWrapperStyle","asterik","asterikStyle","styles","pickerButton","buttonStyle","nativeEvent","layout","bottom","paddingHorizontal","backgroundColor","interpolate","inputRange","outputRange","white","maxWidth","opacity","selectedValueStyle","items","filter","item","value","placeholder","childIconWrapper","iconWrapperStyle","pickerIcon","absoluteFillObject","elevation","wrapper","top","left","map","button","blue","onSelection","itemLabelStyle","color","text","create","borderRadius","zIndex","maxHeight","flexGrow","borderWidth","borderColor","lightBlue","shadowColor","lightgrey","shadowOffset","shadowOpacity","shadowRadius","paddingVertical","flexDirection","alignItems","justifyContent","paddingLeft","marginBottom","alignSelf","padding","borderTopRightRadius","borderBottomRightRadius","marginRight","borderTopColor","grey","borderTopWidth","borderLeftColor","borderRightColor","borderLeftWidth","borderRightWidth","borderBottomWidth"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  ReactText,\n  ReactNode,\n  RefObject,\n  useRef,\n  useEffect,\n} from 'react';\nimport {\n  View,\n  StyleSheet,\n  Pressable,\n  ScrollView,\n  Text,\n  Animated,\n} from 'react-native';\n\nimport { colors } from '../colors';\nimport Label from './Label';\nimport Modal from './Modal';\n\ninterface Item {\n  label: string;\n  value: ReactText;\n}\n\ninterface Props {\n  items: Array<Item>;\n  onSelection: (item: Item) => void;\n  selectedValue: ReactText;\n  pickerIcon?: ReactNode;\n  iconWrapperStyle?: object | object[];\n  asterik?: boolean;\n  labelStyle?: object | object[];\n  asterikStyle?: object | object[];\n  label?: ReactText;\n  labelWrapperStyle?: object | object[];\n  placeholder?: string;\n  selectedValueStyle?: object | object[];\n  buttonStyle?: object | object[];\n  itemLabelStyle?: object | object[];\n  floatingLabel?: boolean;\n}\n\nexport default function Picker(props: Props) {\n  const [selectedValue, setSelectedValue] = useState(props.selectedValue);\n  const [showPicker, setShowPicker] = useState(false);\n  const [position, setPosition] = useState({ x: 0, y: 0, width: 0, height: 0 });\n  const [animatedBottom, setAnimatedBottom] = useState(new Animated.Value(0));\n  const [shouldAnimate, setShouldAnimate] = useState(true);\n\n  const pickerRef: RefObject<View> = useRef() as RefObject<View>;\n\n  const handlePress = () => {\n    if (props.floatingLabel && shouldAnimate)\n      Animated.timing(animatedBottom, {\n        toValue: position.height - 10,\n        useNativeDriver: false,\n        duration: 300,\n      }).start(() => setShouldAnimate(false));\n\n    if (!showPicker)\n      pickerRef.current?.measureInWindow(\n        (x: number, y: number, width: number, height: number) => {\n          setPosition({ x, y, width, height });\n        }\n      );\n    setShowPicker(!showPicker);\n  };\n\n  useEffect(() => {\n    if (props.floatingLabel && props.selectedValue)\n      Animated.timing(animatedBottom, {\n        toValue: position.height - 10,\n        useNativeDriver: false,\n        duration: 300,\n      }).start(() => setShouldAnimate(false));\n  }, [shouldAnimate]);\n\n  return (\n    <>\n      {props.label && !props.floatingLabel && (\n        <Label\n          text={props.label}\n          textStyle={props.labelStyle}\n          style={props.labelWrapperStyle}\n          asterik={props.asterik}\n          asterikStyle={props.asterikStyle}\n        />\n      )}\n      <Pressable\n        style={[styles.pickerButton, props.buttonStyle]}\n        onPress={handlePress}\n        ref={pickerRef}\n        onLayout={({ nativeEvent }) => {\n          setPosition({ ...position, height: nativeEvent.layout.height });\n          setAnimatedBottom(new Animated.Value(nativeEvent.layout.height / 4));\n        }}\n      >\n        {props.floatingLabel && props.label && (\n          <Label\n            text={props.label}\n            textStyle={props.labelStyle}\n            style={[\n              props.labelWrapperStyle,\n              {\n                position: 'absolute',\n                bottom: animatedBottom,\n                paddingHorizontal: 2,\n                backgroundColor: animatedBottom.interpolate({\n                  inputRange: [0, position.height / 3, position.height / 2],\n                  outputRange: ['transparent', 'transparent', colors.white],\n                }),\n              },\n            ]}\n            asterik={props.asterik}\n            asterikStyle={props.asterikStyle}\n          />\n        )}\n\n        <Text\n          style={[\n            {\n              maxWidth: '90%',\n              opacity: props.floatingLabel && shouldAnimate ? 0 : 1,\n            },\n            props.selectedValueStyle,\n          ]}\n          numberOfLines={1}\n        >\n          {props.items.filter((item) => item.value === props.selectedValue)[0]\n            ?.label ||\n            props.placeholder ||\n            '--Pick a value--'}\n        </Text>\n\n        <View style={[styles.childIconWrapper, props.iconWrapperStyle]}>\n          {props.pickerIcon || <View style={styles.pickerIcon} />}\n        </View>\n      </Pressable>\n\n      <Modal show={showPicker}>\n        <Pressable\n          style={{ ...StyleSheet.absoluteFillObject, elevation: 3 }}\n          onPress={() => setShowPicker(false)}\n        >\n          <ScrollView\n            style={[\n              styles.wrapper,\n              {\n                width: position.width,\n                position: 'absolute',\n                top: position.y + position.height + 8,\n                left: position.x,\n              },\n            ]}\n            nestedScrollEnabled\n          >\n            {props.items.map((item) => (\n              <Pressable\n                key={item.value}\n                style={[\n                  styles.button,\n                  props.selectedValue === item.value\n                    ? { backgroundColor: colors.blue }\n                    : null,\n                ]}\n                onPress={() => {\n                  setSelectedValue(item.value);\n                  setShowPicker(false);\n                  props.onSelection(item);\n                }}\n              >\n                <Text\n                  style={[\n                    props.itemLabelStyle,\n                    {\n                      color:\n                        selectedValue === item.value\n                          ? colors.white\n                          : colors.text,\n                    },\n                  ]}\n                >\n                  {item.label}\n                </Text>\n              </Pressable>\n            ))}\n          </ScrollView>\n        </Pressable>\n      </Modal>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: colors.white,\n    borderRadius: 4,\n    zIndex: 1,\n    maxHeight: 200,\n    flexGrow: 0,\n    borderWidth: 0.5,\n    borderColor: colors.lightBlue,\n    elevation: 4,\n    shadowColor: colors.lightgrey,\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 1,\n    shadowRadius: 4,\n  },\n  button: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  pickerButton: {\n    borderRadius: 4,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 8,\n    marginBottom: 24,\n    height: 44,\n    backgroundColor: colors.white,\n  },\n  childIconWrapper: {\n    backgroundColor: colors.white,\n    alignSelf: 'stretch',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    padding: 8,\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    marginRight: 8,\n  },\n  pickerIcon: {\n    borderTopColor: colors.grey,\n    borderTopWidth: 10,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    borderLeftWidth: 9,\n    borderRightWidth: 9,\n    borderBottomWidth: 0,\n    borderRadius: 4,\n  },\n});\n"]}