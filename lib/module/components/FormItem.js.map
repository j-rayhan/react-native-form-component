{"version":3,"sources":["FormItem.tsx"],"names":["React","forwardRef","useState","useImperativeHandle","useRef","TextInput","View","StyleSheet","Text","Animated","Platform","Label","colors","FormItem","children","props","ref","hasError","setHasError","status","message","animatedBottom","Value","shouldAnimate","setShouldAnimate","wrapperHeight","setWrapperHeight","isRequired","value","keyboardType","inputRef","setState","validation","customValidation","containsError","focus","current","blur","clear","isFocused","getComponent","handleBlur","e","onBlur","handleFocus","floatingLabel","timing","toValue","useNativeDriver","duration","start","onFocus","styles","wrapper","textArea","height","undefined","style","borderColor","red","borderWidth","nativeEvent","layout","label","asterik","marginLeft","labelStyle","bottom","paddingHorizontal","backgroundColor","interpolate","inputRange","outputRange","white","marginBottom","flex","position","right","left","inputText","textInputStyle","autoCapitalize","maxLength","multiline","errorWrapper","exclamation","underneathText","underneathTextStyle","zIndex","validateEmail","email","test","validateNumber","number","validateDecimalNumber","endsWith","validatePhoneNumber","replace","extraValidation","create","flexDirection","borderRadius","alignItems","paddingVertical","select","web","outlineWidth","marginTop","color","width","justifyContent","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, {\n  forwardRef,\n  useState,\n  useImperativeHandle,\n  useRef,\n  RefObject,\n  ComponentProps,\n  ReactNode,\n} from 'react';\nimport {\n  TextInput,\n  View,\n  StyleSheet,\n  Text,\n  NativeSyntheticEvent,\n  TextInputFocusEventData,\n  KeyboardTypeOptions,\n  Animated,\n  Platform,\n} from 'react-native';\n\nimport Label from '../components/Label';\nimport { colors } from '../colors';\n\ntype Validation = { status: boolean; message: string };\n\ninterface Props extends ComponentProps<typeof TextInput> {\n  textInputStyle?: object | object[];\n  children?: ReactNode;\n  underneathText?: string;\n  underneathTextStyle?: object | object[];\n  label?: string;\n  labelStyle?: object | object[];\n  isRequired?: boolean;\n  value: string;\n  customValidation?: () => Validation;\n  asterik?: boolean;\n  ref: RefObject<TextInput>;\n  floatingLabel?: boolean;\n  textArea?: boolean;\n}\n\nconst FormItem = forwardRef(({ children, ...props }: Props, ref: any) => {\n  const [hasError, setHasError] = useState({ status: false, message: '' });\n  const [animatedBottom] = useState(new Animated.Value(0));\n  const [shouldAnimate, setShouldAnimate] = useState(true);\n  const [wrapperHeight, setWrapperHeight] = useState(0);\n  const { isRequired, value, keyboardType } = props;\n  const inputRef: any = useRef();\n\n  useImperativeHandle(ref, () => ({\n    setState: () => {\n      let validation;\n      if (props.customValidation) validation = props.customValidation();\n      setHasError(containsError(keyboardType, isRequired!, value, validation));\n    },\n    focus: () => inputRef.current.focus(),\n    blur: () => inputRef.current.blur(),\n    clear: () => inputRef.current.clear(),\n    isFocused: () => inputRef.current.isFocused(),\n    getComponent: () => 'FormItem',\n  }));\n\n  const handleBlur = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    let validation;\n    if (props.customValidation) validation = props.customValidation();\n    setHasError(containsError(keyboardType, isRequired!, value, validation));\n    if (props.onBlur) props.onBlur(e);\n  };\n\n  const handleFocus = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    setHasError({ status: false, message: '' });\n    if (props.floatingLabel && shouldAnimate)\n      Animated.timing(animatedBottom, {\n        toValue: wrapperHeight / 2,\n        useNativeDriver: false,\n        duration: 300,\n      }).start(() => setShouldAnimate(false));\n\n    if (props.onFocus) props.onFocus(e);\n  };\n\n  if (props.floatingLabel) {\n    return (\n      <>\n        <View\n          style={[\n            styles.wrapper,\n            props.textArea ? { height: 150 } : undefined,\n            props.style,\n            hasError.status\n              ? { borderColor: colors.red, borderWidth: 1 }\n              : undefined,\n          ]}\n          onLayout={({ nativeEvent }) =>\n            setWrapperHeight(nativeEvent.layout.height)\n          }\n        >\n          {props.label && (\n            <Label\n              text={props.label}\n              textStyle={[\n                !props.asterik ? { marginLeft: 4 } : undefined,\n                props.labelStyle,\n              ]}\n              asterik={props.asterik}\n              style={[\n                props.floatingLabel ? { bottom: animatedBottom } : undefined,\n                {\n                  paddingHorizontal: 2,\n                  backgroundColor: animatedBottom.interpolate({\n                    inputRange: [0, wrapperHeight / 2],\n                    outputRange: ['transparent', colors.white],\n                  }),\n                },\n              ]}\n            />\n          )}\n\n          <View\n            style={[\n              styles.wrapper,\n              {\n                marginBottom: 0,\n                flex: 1,\n                paddingHorizontal: 0,\n                height: '100%',\n                position: 'absolute',\n                right: 8,\n                left: 8,\n                backgroundColor: 'transparent',\n              },\n            ]}\n          >\n            {children}\n            <TextInput\n              {...props}\n              style={[styles.inputText, props.textInputStyle]}\n              ref={inputRef}\n              onBlur={handleBlur}\n              onFocus={handleFocus}\n              value={props.value}\n              autoCapitalize={\n                props.autoCapitalize ||\n                (props.keyboardType == 'email-address' ? 'none' : undefined)\n              }\n              maxLength={props.maxLength || 150}\n              placeholder=\"\"\n              multiline={props.textArea || props.multiline}\n            />\n            {hasError.status && (\n              <View style={styles.errorWrapper}>\n                <Text style={styles.exclamation}>{'\\u0021'}</Text>\n              </View>\n            )}\n          </View>\n        </View>\n\n        {hasError.status && (\n          <Text style={[styles.underneathText, props.underneathTextStyle]}>\n            {props.underneathText || hasError.message}\n          </Text>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <>\n      {props.label && (\n        <Label\n          text={props.label}\n          textStyle={[\n            styles.label,\n            !props.asterik ? { marginLeft: 4 } : undefined,\n            props.floatingLabel\n              ? { marginBottom: -10, marginLeft: 16, zIndex: 1 }\n              : undefined,\n            props.labelStyle,\n          ]}\n          asterik={props.asterik}\n        />\n      )}\n      <View\n        style={[\n          styles.wrapper,\n          props.textArea ? { height: 150 } : undefined,\n          props.style,\n          hasError.status\n            ? { borderColor: colors.red, borderWidth: 1 }\n            : undefined,\n        ]}\n      >\n        {children}\n        <TextInput\n          {...props}\n          style={[styles.inputText, props.textInputStyle]}\n          ref={inputRef}\n          onBlur={handleBlur}\n          onFocus={handleFocus}\n          value={props.value}\n          autoCapitalize={\n            props.autoCapitalize ||\n            (props.keyboardType == 'email-address' ? 'none' : undefined)\n          }\n          maxLength={props.maxLength || 150}\n          multiline={props.textArea || props.multiline}\n        />\n        {hasError.status && (\n          <View style={styles.errorWrapper}>\n            <Text style={styles.exclamation}>{'\\u0021'}</Text>\n          </View>\n        )}\n      </View>\n\n      {hasError.status && (\n        <Text style={[styles.underneathText, props.underneathTextStyle]}>\n          {props.underneathText || hasError.message}\n        </Text>\n      )}\n    </>\n  );\n});\n\nconst validateEmail = (email: string) => {\n  return /^\\S+@\\S+\\.\\S+$/.test(email);\n};\n\nconst validateNumber = (number: string) => {\n  return /^\\d+$/.test(number);\n};\n\nconst validateDecimalNumber = (number: string) => {\n  return /^\\d+.*\\d*/.test(number) && !number.endsWith('.');\n};\n\nconst validatePhoneNumber = (number: string) =>\n  /^\\+{0,1}\\d+$/.test(number.replace(/ /g, ''));\n\nexport const containsError = (\n  keyboardType: KeyboardTypeOptions = 'default',\n  isRequired: boolean,\n  value: string,\n  extraValidation?: Validation\n) => {\n  if (extraValidation && !extraValidation.status) {\n    return {\n      status: true,\n      message: extraValidation.message,\n    };\n  } else if (extraValidation && extraValidation.status) {\n    return { status: false, message: '' };\n  }\n\n  if (keyboardType == 'email-address' && !validateEmail(value))\n    return { status: true, message: 'Enter a valid email' };\n  if (isRequired && !value) return { status: true, message: 'Cannot be empty' };\n  if (\n    keyboardType == 'number-pad' ||\n    (keyboardType == 'numeric' && !validateNumber(value))\n  )\n    return { status: true, message: 'Invalid number' };\n  if (keyboardType == 'phone-pad' && !validatePhoneNumber(value))\n    return { status: true, message: 'Invalid phone number' };\n  if (keyboardType == 'decimal-pad' && !validateDecimalNumber(value))\n    return { status: true, message: 'Invalid number' };\n\n  return { status: false, message: '' };\n};\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 5,\n    paddingHorizontal: 8,\n    height: 48,\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  inputText: {\n    flex: 1,\n    paddingVertical: 8,\n    ...Platform.select({ web: { outlineWidth: 0 } }),\n    height: '90%',\n  },\n  underneathText: {\n    marginTop: -24,\n    marginLeft: 8,\n    marginBottom: 24,\n    color: colors.red,\n  },\n  label: {\n    marginBottom: 2,\n  },\n  errorWrapper: {\n    height: 30,\n    width: 30,\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.red,\n  },\n  exclamation: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n});\n\nexport default FormItem;\n"]}