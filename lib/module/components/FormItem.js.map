{"version":3,"sources":["FormItem.tsx"],"names":["React","forwardRef","useState","useImperativeHandle","useRef","TextInput","View","StyleSheet","Text","Animated","Platform","Label","colors","wrapperHeight","FormItem","children","props","ref","hasError","setHasError","status","message","animatedBottom","Value","shouldAnimate","setShouldAnimate","isRequired","value","keyboardType","inputRef","setState","validation","customValidation","containsError","focus","current","blur","clear","isFocused","getComponent","handleBlur","e","onBlur","handleFocus","floatingLabel","timing","toValue","useNativeDriver","duration","start","onFocus","styles","wrapper","style","borderColor","red","borderWidth","undefined","nativeEvent","layout","height","label","asterik","marginLeft","marginBottom","labelStyle","position","bottom","backgroundColor","interpolate","inputRange","outputRange","white","floatingInputWrapper","inputText","textInputStyle","autoCapitalize","maxLength","errorWrapper","exclamation","underneathText","underneathTextStyle","zIndex","validateEmail","email","test","validateNumber","number","validateDecimalNumber","endsWith","validatePhoneNumber","replace","extraValidation","create","flexDirection","borderRadius","paddingHorizontal","minHeight","alignItems","flex","paddingVertical","select","web","outlineWidth","marginTop","color","width","justifyContent","fontSize","fontWeight","paddingRight"],"mappings":";;AAAA,OAAOA,KAAP,IACEC,UADF,EAEEC,QAFF,EAGEC,mBAHF,EAIEC,MAJF,QAQO,OARP;AASA,SACEC,SADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,IAJF,EAQEC,QARF,EASEC,QATF,QAUO,cAVP;AAYA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AAmBA,IAAIC,aAAa,GAAG,CAApB;AAEA,MAAMC,QAAQ,gBAAGb,UAAU,CAAC,CAAC;AAAEc,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,EAAgCC,GAAhC,KAA6C;AACvE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC;AAAEkB,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,OAAO,EAAE;AAA1B,GAAD,CAAxC;AACA,QAAM,CAACC,cAAD,IAAmBpB,QAAQ,CAAC,IAAIO,QAAQ,CAACc,KAAb,CAAmB,CAAnB,CAAD,CAAjC;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCvB,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM;AAAEwB,IAAAA,UAAF;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA;AAArB,MAAsCZ,KAA5C;AACA,QAAMa,QAAa,GAAGzB,MAAM,EAA5B;AAEAD,EAAAA,mBAAmB,CAACc,GAAD,EAAM,OAAO;AAC9Ba,IAAAA,QAAQ,EAAE,MAAM;AACd,UAAIC,UAAJ;AACA,UAAIf,KAAK,CAACgB,gBAAV,EAA4BD,UAAU,GAAGf,KAAK,CAACgB,gBAAN,EAAb;AAC5Bb,MAAAA,WAAW,CAACc,aAAa,CAACL,YAAD,EAAeF,UAAf,EAA4BC,KAA5B,EAAmCI,UAAnC,CAAd,CAAX;AACD,KAL6B;AAM9BG,IAAAA,KAAK,EAAE,MAAML,QAAQ,CAACM,OAAT,CAAiBD,KAAjB,EANiB;AAO9BE,IAAAA,IAAI,EAAE,MAAMP,QAAQ,CAACM,OAAT,CAAiBC,IAAjB,EAPkB;AAQ9BC,IAAAA,KAAK,EAAE,MAAMR,QAAQ,CAACM,OAAT,CAAiBE,KAAjB,EARiB;AAS9BC,IAAAA,SAAS,EAAE,MAAMT,QAAQ,CAACM,OAAT,CAAiBG,SAAjB,EATa;AAU9BC,IAAAA,YAAY,EAAE,MAAM;AAVU,GAAP,CAAN,CAAnB;;AAaA,QAAMC,UAAU,GAAIC,CAAD,IAAsD;AACvE,QAAIV,UAAJ;AACA,QAAIf,KAAK,CAACgB,gBAAV,EAA4BD,UAAU,GAAGf,KAAK,CAACgB,gBAAN,EAAb;AAC5Bb,IAAAA,WAAW,CAACc,aAAa,CAACL,YAAD,EAAeF,UAAf,EAA4BC,KAA5B,EAAmCI,UAAnC,CAAd,CAAX;AACA,QAAIf,KAAK,CAAC0B,MAAV,EAAkB1B,KAAK,CAAC0B,MAAN,CAAaD,CAAb;AACnB,GALD;;AAOA,QAAME,WAAW,GAAIF,CAAD,IAAsD;AACxEtB,IAAAA,WAAW,CAAC;AAAEC,MAAAA,MAAM,EAAE,KAAV;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAAD,CAAX;AACA,QAAIL,KAAK,CAAC4B,aAAN,IAAuBpB,aAA3B,EACEf,QAAQ,CAACoC,MAAT,CAAgBvB,cAAhB,EAAgC;AAC9BwB,MAAAA,OAAO,EAAEjC,aAAa,GAAG,CADK;AAE9BkC,MAAAA,eAAe,EAAE,KAFa;AAG9BC,MAAAA,QAAQ,EAAE;AAHoB,KAAhC,EAIGC,KAJH,CAIS,MAAMxB,gBAAgB,CAAC,KAAD,CAJ/B;AAMF,QAAIT,KAAK,CAACkC,OAAV,EAAmBlC,KAAK,CAACkC,OAAN,CAAcT,CAAd;AACpB,GAVD;;AAYA,MAAIzB,KAAK,CAAC4B,aAAV,EAAyB;AACvB,wBACE,uDACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE,CACLO,MAAM,CAACC,OADF,EAELpC,KAAK,CAACqC,KAFD,EAGLnC,QAAQ,CAACE,MAAT,GACI;AAAEkC,QAAAA,WAAW,EAAE1C,MAAM,CAAC2C,GAAtB;AAA2BC,QAAAA,WAAW,EAAE;AAAxC,OADJ,GAEIC,SALC,CADT;AAQE,MAAA,QAAQ,EAAE,CAAC;AAAEC,QAAAA;AAAF,OAAD,KACP7C,aAAa,GAAG6C,WAAW,CAACC,MAAZ,CAAmBC;AATxC,OAYG5C,KAAK,CAAC6C,KAAN,iBACC,oBAAC,KAAD;AACE,MAAA,IAAI,EAAE7C,KAAK,CAAC6C,KADd;AAEE,MAAA,SAAS,EAAE,CACT,CAAC7C,KAAK,CAAC8C,OAAP,GAAiB;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAjB,GAAqCN,SAD5B,EAETzC,KAAK,CAAC4B,aAAN,GAAsB;AAAEoB,QAAAA,YAAY,EAAE;AAAhB,OAAtB,GAA4CP,SAFnC,EAGTzC,KAAK,CAACiD,UAHG,CAFb;AAOE,MAAA,OAAO,EAAEjD,KAAK,CAAC8C,OAPjB;AAQE,MAAA,KAAK,EAAE;AACLI,QAAAA,QAAQ,EAAE,UADL;AAELC,QAAAA,MAAM,EAAE7C,cAFH;AAGL8C,QAAAA,eAAe,EAAE9C,cAAc,CAAC+C,WAAf,CAA2B;AAC1CC,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAIzD,aAAa,GAAG,CAApB,CAD8B;AAE1C0D,UAAAA,WAAW,EAAE,CAAC,aAAD,EAAgB3D,MAAM,CAAC4D,KAAvB;AAF6B,SAA3B;AAHZ;AART,MAbJ,eAgCE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAErB,MAAM,CAACsB;AAApB,OACG1D,QADH,eAEE,oBAAC,SAAD,eACMC,KADN;AAEE,MAAA,KAAK,EAAE,CAACmC,MAAM,CAACuB,SAAR,EAAmB1D,KAAK,CAAC2D,cAAzB,CAFT;AAGE,MAAA,GAAG,EAAE9C,QAHP;AAIE,MAAA,MAAM,EAAEW,UAJV;AAKE,MAAA,OAAO,EAAEG,WALX;AAME,MAAA,KAAK,EAAE3B,KAAK,CAACW,KANf;AAOE,MAAA,cAAc,EACZX,KAAK,CAAC4D,cAAN,KACC5D,KAAK,CAACY,YAAN,IAAsB,eAAtB,GAAwC,MAAxC,GAAiD6B,SADlD,CARJ;AAWE,MAAA,SAAS,EAAEzC,KAAK,CAAC6D,SAAN,IAAmB,GAXhC;AAYE,MAAA,WAAW,EAAC;AAZd,OAFF,EAgBG3D,QAAQ,CAACE,MAAT,iBACC,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE+B,MAAM,CAAC2B;AAApB,oBACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE3B,MAAM,CAAC4B;AAApB,OAAkC,QAAlC,CADF,CAjBJ,CAhCF,CADF,EAyDG7D,QAAQ,CAACE,MAAT,iBACC,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAAC+B,MAAM,CAAC6B,cAAR,EAAwBhE,KAAK,CAACiE,mBAA9B;AAAb,OACGjE,KAAK,CAACgE,cAAN,IAAwB9D,QAAQ,CAACG,OADpC,CA1DJ,CADF;AAiED;;AAED,sBACE,0CACGL,KAAK,CAAC6C,KAAN,iBACC,oBAAC,KAAD;AACE,IAAA,IAAI,EAAE7C,KAAK,CAAC6C,KADd;AAEE,IAAA,KAAK,EAAE,CACLV,MAAM,CAACU,KADF,EAEL,CAAC7C,KAAK,CAAC8C,OAAP,GAAiB;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAjB,GAAqCN,SAFhC,EAGLzC,KAAK,CAAC4B,aAAN,GACI;AAAEoB,MAAAA,YAAY,EAAE,CAAC,EAAjB;AAAqBD,MAAAA,UAAU,EAAE,EAAjC;AAAqCmB,MAAAA,MAAM,EAAE;AAA7C,KADJ,GAEIzB,SALC,EAMLzC,KAAK,CAACiD,UAND,CAFT;AAUE,IAAA,OAAO,EAAEjD,KAAK,CAAC8C;AAVjB,IAFJ,eAeE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLX,MAAM,CAACC,OADF,EAELpC,KAAK,CAACqC,KAFD,EAGLnC,QAAQ,CAACE,MAAT,GACI;AAAEkC,MAAAA,WAAW,EAAE1C,MAAM,CAAC2C,GAAtB;AAA2BC,MAAAA,WAAW,EAAE;AAAxC,KADJ,GAEIC,SALC;AADT,KASG1C,QATH,eAUE,oBAAC,SAAD,eACMC,KADN;AAEE,IAAA,KAAK,EAAE,CAACmC,MAAM,CAACuB,SAAR,EAAmB1D,KAAK,CAAC2D,cAAzB,CAFT;AAGE,IAAA,GAAG,EAAE9C,QAHP;AAIE,IAAA,MAAM,EAAEW,UAJV;AAKE,IAAA,OAAO,EAAEG,WALX;AAME,IAAA,KAAK,EAAE3B,KAAK,CAACW,KANf;AAOE,IAAA,cAAc,EACZX,KAAK,CAAC4D,cAAN,KACC5D,KAAK,CAACY,YAAN,IAAsB,eAAtB,GAAwC,MAAxC,GAAiD6B,SADlD,CARJ;AAWE,IAAA,SAAS,EAAEzC,KAAK,CAAC6D,SAAN,IAAmB;AAXhC,KAVF,EAuBG3D,QAAQ,CAACE,MAAT,iBACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE+B,MAAM,CAAC2B;AAApB,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE3B,MAAM,CAAC4B;AAApB,KAAkC,QAAlC,CADF,CAxBJ,CAfF,EA6CG7D,QAAQ,CAACE,MAAT,iBACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAC+B,MAAM,CAAC6B,cAAR,EAAwBhE,KAAK,CAACiE,mBAA9B;AAAb,KACGjE,KAAK,CAACgE,cAAN,IAAwB9D,QAAQ,CAACG,OADpC,CA9CJ,CADF;AAqDD,CAhK0B,CAA3B;;AAkKA,MAAM8D,aAAa,GAAIC,KAAD,IAAmB;AACvC,SAAO,iBAAiBC,IAAjB,CAAsBD,KAAtB,CAAP;AACD,CAFD;;AAIA,MAAME,cAAc,GAAIC,MAAD,IAAoB;AACzC,SAAO,QAAQF,IAAR,CAAaE,MAAb,CAAP;AACD,CAFD;;AAIA,MAAMC,qBAAqB,GAAID,MAAD,IAAoB;AAChD,SAAO,YAAYF,IAAZ,CAAiBE,MAAjB,KAA4B,CAACA,MAAM,CAACE,QAAP,CAAgB,GAAhB,CAApC;AACD,CAFD;;AAIA,MAAMC,mBAAmB,GAAIH,MAAD,IAC1B,eAAeF,IAAf,CAAoBE,MAAM,CAACI,OAAP,CAAe,IAAf,EAAqB,EAArB,CAApB,CADF;;AAGA,OAAO,MAAM1D,aAAa,GAAG,CAC3BL,YAAiC,GAAG,SADT,EAE3BF,UAF2B,EAG3BC,KAH2B,EAI3BiE,eAJ2B,KAKxB;AACH,MAAIA,eAAe,IAAI,CAACA,eAAe,CAACxE,MAAxC,EAAgD;AAC9C,WAAO;AACLA,MAAAA,MAAM,EAAE,IADH;AAELC,MAAAA,OAAO,EAAEuE,eAAe,CAACvE;AAFpB,KAAP;AAID,GALD,MAKO,IAAIuE,eAAe,IAAIA,eAAe,CAACxE,MAAvC,EAA+C;AACpD,WAAO;AAAEA,MAAAA,MAAM,EAAE,KAAV;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAAP;AACD;;AAED,MAAIO,YAAY,IAAI,eAAhB,IAAmC,CAACuD,aAAa,CAACxD,KAAD,CAArD,EACE,OAAO;AAAEP,IAAAA,MAAM,EAAE,IAAV;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GAAP;AACF,MAAIK,UAAU,IAAI,CAACC,KAAnB,EAA0B,OAAO;AAAEP,IAAAA,MAAM,EAAE,IAAV;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GAAP;AAC1B,MACEO,YAAY,IAAI,YAAhB,IACCA,YAAY,IAAI,SAAhB,IAA6B,CAAC0D,cAAc,CAAC3D,KAAD,CAF/C,EAIE,OAAO;AAAEP,IAAAA,MAAM,EAAE,IAAV;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GAAP;AACF,MAAIO,YAAY,IAAI,WAAhB,IAA+B,CAAC8D,mBAAmB,CAAC/D,KAAD,CAAvD,EACE,OAAO;AAAEP,IAAAA,MAAM,EAAE,IAAV;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GAAP;AACF,MAAIO,YAAY,IAAI,aAAhB,IAAiC,CAAC4D,qBAAqB,CAAC7D,KAAD,CAA3D,EACE,OAAO;AAAEP,IAAAA,MAAM,EAAE,IAAV;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GAAP;AAEF,SAAO;AAAED,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,OAAO,EAAE;AAA1B,GAAP;AACD,CA7BM;AA+BP,MAAM8B,MAAM,GAAG5C,UAAU,CAACsF,MAAX,CAAkB;AAC/BzC,EAAAA,OAAO,EAAE;AACP0C,IAAAA,aAAa,EAAE,KADR;AAEP1B,IAAAA,eAAe,EAAE,OAFV;AAGP2B,IAAAA,YAAY,EAAE,CAHP;AAIPC,IAAAA,iBAAiB,EAAE,CAJZ;AAKPC,IAAAA,SAAS,EAAE,EALJ;AAMPC,IAAAA,UAAU,EAAE,QANL;AAOPlC,IAAAA,YAAY,EAAE;AAPP,GADsB;AAU/BU,EAAAA,SAAS,EAAE;AACTyB,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,CAFR;AAGT,OAAG1F,QAAQ,CAAC2F,MAAT,CAAgB;AAAEC,MAAAA,GAAG,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB;AAAP,KAAhB;AAHM,GAVoB;AAe/BvB,EAAAA,cAAc,EAAE;AACdwB,IAAAA,SAAS,EAAE,CAAC,EADE;AAEdzC,IAAAA,UAAU,EAAE,CAFE;AAGdC,IAAAA,YAAY,EAAE,EAHA;AAIdyC,IAAAA,KAAK,EAAE7F,MAAM,CAAC2C;AAJA,GAfe;AAqB/BM,EAAAA,KAAK,EAAE;AACLG,IAAAA,YAAY,EAAE;AADT,GArBwB;AAwB/Bc,EAAAA,YAAY,EAAE;AACZlB,IAAAA,MAAM,EAAE,EADI;AAEZ8C,IAAAA,KAAK,EAAE,EAFK;AAGZX,IAAAA,YAAY,EAAE,EAHF;AAIZY,IAAAA,cAAc,EAAE,QAJJ;AAKZT,IAAAA,UAAU,EAAE,QALA;AAMZ9B,IAAAA,eAAe,EAAExD,MAAM,CAAC2C;AANZ,GAxBiB;AAgC/BwB,EAAAA,WAAW,EAAE;AACX0B,IAAAA,KAAK,EAAE,OADI;AAEXG,IAAAA,QAAQ,EAAE,EAFC;AAGXC,IAAAA,UAAU,EAAE;AAHD,GAhCkB;AAqC/BpC,EAAAA,oBAAoB,EAAE;AACpBqB,IAAAA,aAAa,EAAE,KADK;AAEpBI,IAAAA,UAAU,EAAE,QAFQ;AAGpBQ,IAAAA,KAAK,EAAE,MAHa;AAIpBxC,IAAAA,QAAQ,EAAE,UAJU;AAKpBH,IAAAA,UAAU,EAAE,EALQ;AAMpB+C,IAAAA,YAAY,EAAE;AANM;AArCS,CAAlB,CAAf;AA+CA,eAAehG,QAAf","sourcesContent":["import React, {\n  forwardRef,\n  useState,\n  useImperativeHandle,\n  useRef,\n  RefObject,\n  ComponentProps,\n  ReactNode,\n} from 'react';\nimport {\n  TextInput,\n  View,\n  StyleSheet,\n  Text,\n  NativeSyntheticEvent,\n  TextInputFocusEventData,\n  KeyboardTypeOptions,\n  Animated,\n  Platform,\n} from 'react-native';\n\nimport Label from '../components/Label';\nimport { colors } from '../colors';\n\ntype Validation = { status: boolean; message: string };\n\ninterface Props extends ComponentProps<typeof TextInput> {\n  textInputStyle?: object | object[];\n  children?: ReactNode;\n  underneathText?: string;\n  underneathTextStyle?: object | object[];\n  label?: string;\n  labelStyle?: object | object[];\n  isRequired?: boolean;\n  value: string;\n  customValidation?: () => Validation;\n  asterik?: boolean;\n  ref: RefObject<TextInput>;\n  floatingLabel?: boolean;\n}\n\nlet wrapperHeight = 0;\n\nconst FormItem = forwardRef(({ children, ...props }: Props, ref: any) => {\n  const [hasError, setHasError] = useState({ status: false, message: '' });\n  const [animatedBottom] = useState(new Animated.Value(0));\n  const [shouldAnimate, setShouldAnimate] = useState(true);\n  const { isRequired, value, keyboardType } = props;\n  const inputRef: any = useRef();\n\n  useImperativeHandle(ref, () => ({\n    setState: () => {\n      let validation;\n      if (props.customValidation) validation = props.customValidation();\n      setHasError(containsError(keyboardType, isRequired!, value, validation));\n    },\n    focus: () => inputRef.current.focus(),\n    blur: () => inputRef.current.blur(),\n    clear: () => inputRef.current.clear(),\n    isFocused: () => inputRef.current.isFocused(),\n    getComponent: () => 'FormItem',\n  }));\n\n  const handleBlur = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    let validation;\n    if (props.customValidation) validation = props.customValidation();\n    setHasError(containsError(keyboardType, isRequired!, value, validation));\n    if (props.onBlur) props.onBlur(e);\n  };\n\n  const handleFocus = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    setHasError({ status: false, message: '' });\n    if (props.floatingLabel && shouldAnimate)\n      Animated.timing(animatedBottom, {\n        toValue: wrapperHeight / 2,\n        useNativeDriver: false,\n        duration: 300,\n      }).start(() => setShouldAnimate(false));\n\n    if (props.onFocus) props.onFocus(e);\n  };\n\n  if (props.floatingLabel) {\n    return (\n      <>\n        <View\n          style={[\n            styles.wrapper,\n            props.style,\n            hasError.status\n              ? { borderColor: colors.red, borderWidth: 1 }\n              : undefined,\n          ]}\n          onLayout={({ nativeEvent }) =>\n            (wrapperHeight = nativeEvent.layout.height)\n          }\n        >\n          {props.label && (\n            <Label\n              text={props.label}\n              textStyle={[\n                !props.asterik ? { marginLeft: 4 } : undefined,\n                props.floatingLabel ? { marginBottom: 0 } : undefined,\n                props.labelStyle,\n              ]}\n              asterik={props.asterik}\n              style={{\n                position: 'relative',\n                bottom: animatedBottom,\n                backgroundColor: animatedBottom.interpolate({\n                  inputRange: [0, wrapperHeight / 2],\n                  outputRange: ['transparent', colors.white],\n                }),\n              }}\n            />\n          )}\n\n          <View style={styles.floatingInputWrapper}>\n            {children}\n            <TextInput\n              {...props}\n              style={[styles.inputText, props.textInputStyle]}\n              ref={inputRef}\n              onBlur={handleBlur}\n              onFocus={handleFocus}\n              value={props.value}\n              autoCapitalize={\n                props.autoCapitalize ||\n                (props.keyboardType == 'email-address' ? 'none' : undefined)\n              }\n              maxLength={props.maxLength || 150}\n              placeholder=\"\"\n            />\n            {hasError.status && (\n              <View style={styles.errorWrapper}>\n                <Text style={styles.exclamation}>{'\\u0021'}</Text>\n              </View>\n            )}\n          </View>\n        </View>\n\n        {hasError.status && (\n          <Text style={[styles.underneathText, props.underneathTextStyle]}>\n            {props.underneathText || hasError.message}\n          </Text>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <>\n      {props.label && (\n        <Label\n          text={props.label}\n          style={[\n            styles.label,\n            !props.asterik ? { marginLeft: 4 } : undefined,\n            props.floatingLabel\n              ? { marginBottom: -10, marginLeft: 16, zIndex: 1 }\n              : undefined,\n            props.labelStyle,\n          ]}\n          asterik={props.asterik}\n        />\n      )}\n      <View\n        style={[\n          styles.wrapper,\n          props.style,\n          hasError.status\n            ? { borderColor: colors.red, borderWidth: 1 }\n            : undefined,\n        ]}\n      >\n        {children}\n        <TextInput\n          {...props}\n          style={[styles.inputText, props.textInputStyle]}\n          ref={inputRef}\n          onBlur={handleBlur}\n          onFocus={handleFocus}\n          value={props.value}\n          autoCapitalize={\n            props.autoCapitalize ||\n            (props.keyboardType == 'email-address' ? 'none' : undefined)\n          }\n          maxLength={props.maxLength || 150}\n        />\n        {hasError.status && (\n          <View style={styles.errorWrapper}>\n            <Text style={styles.exclamation}>{'\\u0021'}</Text>\n          </View>\n        )}\n      </View>\n\n      {hasError.status && (\n        <Text style={[styles.underneathText, props.underneathTextStyle]}>\n          {props.underneathText || hasError.message}\n        </Text>\n      )}\n    </>\n  );\n});\n\nconst validateEmail = (email: string) => {\n  return /^\\S+@\\S+\\.\\S+$/.test(email);\n};\n\nconst validateNumber = (number: string) => {\n  return /^\\d+$/.test(number);\n};\n\nconst validateDecimalNumber = (number: string) => {\n  return /^\\d+.*\\d*/.test(number) && !number.endsWith('.');\n};\n\nconst validatePhoneNumber = (number: string) =>\n  /^\\+{0,1}\\d+$/.test(number.replace(/ /g, ''));\n\nexport const containsError = (\n  keyboardType: KeyboardTypeOptions = 'default',\n  isRequired: boolean,\n  value: string,\n  extraValidation?: Validation\n) => {\n  if (extraValidation && !extraValidation.status) {\n    return {\n      status: true,\n      message: extraValidation.message,\n    };\n  } else if (extraValidation && extraValidation.status) {\n    return { status: false, message: '' };\n  }\n\n  if (keyboardType == 'email-address' && !validateEmail(value))\n    return { status: true, message: 'Enter a valid email' };\n  if (isRequired && !value) return { status: true, message: 'Cannot be empty' };\n  if (\n    keyboardType == 'number-pad' ||\n    (keyboardType == 'numeric' && !validateNumber(value))\n  )\n    return { status: true, message: 'Invalid number' };\n  if (keyboardType == 'phone-pad' && !validatePhoneNumber(value))\n    return { status: true, message: 'Invalid phone number' };\n  if (keyboardType == 'decimal-pad' && !validateDecimalNumber(value))\n    return { status: true, message: 'Invalid number' };\n\n  return { status: false, message: '' };\n};\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 5,\n    paddingHorizontal: 8,\n    minHeight: 48,\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  inputText: {\n    flex: 1,\n    paddingVertical: 8,\n    ...Platform.select({ web: { outlineWidth: 0 } }),\n  },\n  underneathText: {\n    marginTop: -24,\n    marginLeft: 8,\n    marginBottom: 24,\n    color: colors.red,\n  },\n  label: {\n    marginBottom: 2,\n  },\n  errorWrapper: {\n    height: 30,\n    width: 30,\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.red,\n  },\n  exclamation: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  floatingInputWrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%',\n    position: 'absolute',\n    marginLeft: 16,\n    paddingRight: 8,\n  },\n});\n\nexport default FormItem;\n"]}