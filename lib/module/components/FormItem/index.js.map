{"version":3,"sources":["index.tsx"],"names":["React","forwardRef","useState","useImperativeHandle","useRef","TextInput","View","StyleSheet","Text","Animated","Platform","Label","colors","FormItem","children","props","ref","hasError","setHasError","status","message","animatedBottom","Value","shouldAnimate","setShouldAnimate","wrapperHeight","setWrapperHeight","isRequired","value","keyboardType","inputRef","setState","validation","customValidation","containsError","focus","current","blur","clear","isFocused","getComponent","handleBlur","e","onBlur","handleFocus","floatingLabel","timing","toValue","textArea","useNativeDriver","duration","start","onFocus","styles","wrapper","height","alignItems","undefined","style","borderColor","red","borderWidth","nativeEvent","layout","label","asterik","marginLeft","labelStyle","bottom","paddingHorizontal","backgroundColor","interpolate","inputRange","outputRange","white","marginTop","marginBottom","flex","position","right","left","inputText","textInputStyle","autoCapitalize","maxLength","multiline","errorWrapper","exclamation","underneathText","underneathTextStyle","validateEmail","email","test","validateNumber","number","validateDecimalNumber","endsWith","validatePhoneNumber","replace","extraValidation","create","flexDirection","borderRadius","paddingVertical","select","web","outlineWidth","color","width","justifyContent","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, {\n  forwardRef,\n  useState,\n  useImperativeHandle,\n  useRef,\n  ComponentProps,\n  ReactNode,\n} from 'react';\nimport {\n  TextInput,\n  View,\n  StyleSheet,\n  Text,\n  NativeSyntheticEvent,\n  TextInputFocusEventData,\n  KeyboardTypeOptions,\n  Animated,\n  Platform,\n} from 'react-native';\n\nimport Label from '../Label';\nimport { colors } from '../../colors';\n\ntype Validation = { status: boolean; message: string };\n\ninterface Props extends ComponentProps<typeof TextInput> {\n  textInputStyle?: object | object[];\n  children?: ReactNode;\n  underneathText?: string;\n  underneathTextStyle?: object | object[];\n  label?: string;\n  labelStyle?: object | object[];\n  isRequired?: boolean;\n  value: string;\n  customValidation?: () => Validation;\n  asterik?: boolean;\n  floatingLabel?: boolean;\n  textArea?: boolean;\n}\n\nconst FormItem = forwardRef(({ children, ...props }: Props, ref: any) => {\n  const [hasError, setHasError] = useState({ status: false, message: '' });\n  const [animatedBottom] = useState(new Animated.Value(0));\n  const [shouldAnimate, setShouldAnimate] = useState(true);\n  const [wrapperHeight, setWrapperHeight] = useState(0);\n  const { isRequired, value, keyboardType } = props;\n  const inputRef: any = useRef();\n\n  useImperativeHandle(ref, () => ({\n    setState: () => {\n      let validation;\n      if (props.customValidation) validation = props.customValidation();\n      setHasError(containsError(keyboardType, isRequired!, value, validation));\n    },\n    focus: () => inputRef.current.focus(),\n    blur: () => inputRef.current.blur(),\n    clear: () => inputRef.current.clear(),\n    isFocused: () => inputRef.current.isFocused(),\n    getComponent: () => 'FormItem',\n  }));\n\n  const handleBlur = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    let validation;\n    if (props.customValidation) validation = props.customValidation();\n    setHasError(containsError(keyboardType, isRequired!, value, validation));\n    if (props.onBlur) props.onBlur(e);\n  };\n\n  const handleFocus = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    setHasError({ status: false, message: '' });\n    if (props.floatingLabel && shouldAnimate)\n      Animated.timing(animatedBottom, {\n        toValue: props.textArea ? 24 : wrapperHeight / 2,\n        useNativeDriver: false,\n        duration: 300,\n      }).start(() => setShouldAnimate(false));\n\n    if (props.onFocus) props.onFocus(e);\n  };\n\n  if (props.floatingLabel) {\n    return (\n      <>\n        <View\n          style={[\n            styles.wrapper,\n            props.textArea\n              ? { height: 120, alignItems: 'flex-start' }\n              : undefined,\n            props.style,\n            hasError.status\n              ? { borderColor: colors.red, borderWidth: 1 }\n              : undefined,\n          ]}\n          onLayout={({ nativeEvent }) =>\n            setWrapperHeight(nativeEvent.layout.height)\n          }\n        >\n          {props.label && (\n            <Label\n              text={props.label}\n              textStyle={[\n                !props.asterik ? { marginLeft: 4 } : undefined,\n                props.labelStyle,\n              ]}\n              asterik={props.asterik}\n              style={[\n                props.floatingLabel ? { bottom: animatedBottom } : undefined,\n                {\n                  paddingHorizontal: 2,\n                  backgroundColor: animatedBottom.interpolate({\n                    inputRange: [0, props.textArea ? 24 : wrapperHeight / 2],\n                    outputRange: ['transparent', colors.white],\n                  }),\n                  marginTop: props.textArea ? 16 : 0,\n                },\n              ]}\n            />\n          )}\n\n          <View\n            style={[\n              styles.wrapper,\n              {\n                marginBottom: 0,\n                flex: 1,\n                paddingHorizontal: 0,\n                height: '100%',\n                position: 'absolute',\n                right: 8,\n                left: 8,\n                backgroundColor: 'transparent',\n              },\n            ]}\n          >\n            {children}\n            <TextInput\n              {...props}\n              style={[styles.inputText, props.textInputStyle]}\n              ref={inputRef}\n              onBlur={handleBlur}\n              onFocus={handleFocus}\n              value={props.value}\n              autoCapitalize={\n                props.autoCapitalize ||\n                (props.keyboardType == 'email-address' ? 'none' : undefined)\n              }\n              maxLength={props.maxLength || 150}\n              placeholder=\"\"\n              multiline={props.textArea || props.multiline}\n              textAlignVertical={props.textArea ? 'top' : 'center'}\n              testID=\"input\"\n            />\n            {hasError.status && (\n              <View style={styles.errorWrapper}>\n                <Text style={styles.exclamation}>{'\\u0021'}</Text>\n              </View>\n            )}\n          </View>\n        </View>\n\n        {hasError.status && (\n          <Text style={[styles.underneathText, props.underneathTextStyle]}>\n            {props.underneathText || hasError.message}\n          </Text>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <>\n      {props.label && (\n        <Label\n          text={props.label}\n          textStyle={[\n            styles.label,\n            !props.asterik ? { marginLeft: 4 } : undefined,\n            props.labelStyle,\n          ]}\n          asterik={props.asterik}\n        />\n      )}\n      <View\n        style={[\n          styles.wrapper,\n          props.textArea ? { height: 120 } : undefined,\n          props.style,\n          hasError.status\n            ? { borderColor: colors.red, borderWidth: 1 }\n            : undefined,\n        ]}\n      >\n        {children}\n        <TextInput\n          {...props}\n          style={[styles.inputText, props.textInputStyle]}\n          ref={inputRef}\n          onBlur={handleBlur}\n          onFocus={handleFocus}\n          value={props.value}\n          autoCapitalize={\n            props.autoCapitalize ||\n            (props.keyboardType == 'email-address' ? 'none' : undefined)\n          }\n          maxLength={props.maxLength || 150}\n          multiline={props.textArea || props.multiline}\n          textAlignVertical={props.textArea ? 'top' : 'center'}\n          testID=\"input\"\n        />\n        {hasError.status && (\n          <View style={styles.errorWrapper}>\n            <Text style={styles.exclamation}>{'\\u0021'}</Text>\n          </View>\n        )}\n      </View>\n\n      {hasError.status && (\n        <Text style={[styles.underneathText, props.underneathTextStyle]}>\n          {props.underneathText || hasError.message}\n        </Text>\n      )}\n    </>\n  );\n});\n\nconst validateEmail = (email: string) => {\n  return /^\\S+@\\S+\\.\\S+$/.test(email);\n};\n\nconst validateNumber = (number: string) => {\n  return /^\\d+$/.test(number);\n};\n\nconst validateDecimalNumber = (number: string) => {\n  return /^\\d+.*\\d*/.test(number) && !number.endsWith('.');\n};\n\nconst validatePhoneNumber = (number: string) =>\n  /^\\+{0,1}\\d+$/.test(number.replace(/ /g, ''));\n\nexport const containsError = (\n  keyboardType: KeyboardTypeOptions = 'default',\n  isRequired: boolean,\n  value: string,\n  extraValidation?: Validation\n) => {\n  if (extraValidation && !extraValidation.status) {\n    return {\n      status: true,\n      message: extraValidation.message,\n    };\n  } else if (extraValidation && extraValidation.status) {\n    return { status: false, message: '' };\n  }\n\n  if (keyboardType == 'email-address' && !validateEmail(value))\n    return { status: true, message: 'Enter a valid email' };\n  if (isRequired && !value) return { status: true, message: 'Cannot be empty' };\n  if (\n    keyboardType == 'number-pad' ||\n    (keyboardType == 'numeric' && !validateNumber(value))\n  )\n    return { status: true, message: 'Invalid number' };\n  if (keyboardType == 'phone-pad' && !validatePhoneNumber(value))\n    return { status: true, message: 'Invalid phone number' };\n  if (keyboardType == 'decimal-pad' && !validateDecimalNumber(value))\n    return { status: true, message: 'Invalid number' };\n\n  return { status: false, message: '' };\n};\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 5,\n    paddingHorizontal: 8,\n    height: 48,\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  inputText: {\n    flex: 1,\n    paddingVertical: 8,\n    ...Platform.select({ web: { outlineWidth: 0 } }),\n    height: '90%',\n  },\n  underneathText: {\n    marginTop: -24,\n    marginLeft: 8,\n    marginBottom: 24,\n    color: colors.red,\n  },\n  label: {\n    marginBottom: 2,\n  },\n  errorWrapper: {\n    height: 30,\n    width: 30,\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.red,\n  },\n  exclamation: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n});\n\nexport default FormItem;\n"]}