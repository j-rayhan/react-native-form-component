{"version":3,"sources":["PinInput.tsx"],"names":["refs","PinInput","props","pin","setPin","Array","numOfInput","fill","activeInput","setActiveInput","length","i","push","changeFocus","index","text","current","focus","styles","wrapper","map","_","backgroundColor","flex","onChangeText","toString","replace","formItem","borderBottomColor","colors","black","lightgrey","textInputStyle","StyleSheet","create","flexDirection","alignSelf","maxWidth","borderBottomWidth","textAlign","fontSize"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAQA,MAAMA,IAA4B,GAAG,EAArC;;AACe,SAASC,QAAT,CAAkBC,KAAlB,EAAgC;AAC7C,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgB,qBAASC,KAAK,CAACH,KAAK,CAACI,UAAP,CAAL,CAAwBC,IAAxB,CAA6B,EAA7B,CAAT,CAAtB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC,qBAAS,CAAT,CAAtC;;AACA,MAAI,CAACT,IAAI,CAACU,MAAV,EAAkB;AAChB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,GAAG,CAACO,MAAxB,EAAgCC,CAAC,EAAjC,EAAqC;AACnCX,MAAAA,IAAI,CAACY,IAAL,eAAU,uBAAV;AACD;AACF;;AAED,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAgBC,IAAhB,KAAiC;AAAA;;AACnD,QAAIA,IAAJ,EAAU,SAAAf,IAAI,CAACc,KAAK,GAAG,CAAT,CAAJ,iEAAiBE,OAAjB,gEAA0BC,KAA1B,GAAV,KACK,UAAAjB,IAAI,CAACc,KAAK,GAAG,CAAT,CAAJ,oEAAiBE,OAAjB,kEAA0BC,KAA1B;AACN,GAHD;;AAKA,sBACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACGhB,GAAG,CAACiB,GAAJ,CAAQ,CAACC,CAAD,EAAIP,KAAJ,kBACP,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAEX,GAAG,CAACW,KAAD,CADZ;AAEE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,eAAe,EAAE,aAAnB;AAAkCC,MAAAA,IAAI,EAAE;AAAxC,KAFT;AAGE,IAAA,YAAY,EAAGR,IAAD,IAAU;AACtBZ,MAAAA,GAAG,CAACW,KAAD,CAAH,GAAaC,IAAb;AACAX,MAAAA,MAAM,CAAC,CAAC,GAAGD,GAAJ,CAAD,CAAN;AACAU,MAAAA,WAAW,CAACC,KAAD,EAAQC,IAAR,CAAX;AACAb,MAAAA,KAAK,CAACsB,YAAN,CAAmBrB,GAAG,CAACsB,QAAJ,GAAeC,OAAf,CAAuB,IAAvB,EAA6B,EAA7B,CAAnB;AACD,KARH;AASE,IAAA,cAAc,EAAE,CACdR,MAAM,CAACS,QADO,EAEd;AACEC,MAAAA,iBAAiB,EACfpB,WAAW,KAAKM,KAAhB,GAAwBe,eAAOC,KAA/B,GAAuCD,eAAOE;AAFlD,KAFc,EAMd7B,KAAK,CAAC8B,cANQ,CATlB;AAiBE,IAAA,SAAS,EAAE,CAjBb;AAkBE,IAAA,GAAG,EAAElB,KAlBP;AAmBE,IAAA,GAAG,EAAEd,IAAI,CAACc,KAAD,CAnBX;AAoBE,IAAA,OAAO,EAAE,MAAML,cAAc,CAACK,KAAD;AApB/B,IADD,CADH,CADF;AA4BD;;AAED,MAAMI,MAAM,GAAGe,wBAAWC,MAAX,CAAkB;AAC/Bf,EAAAA,OAAO,EAAE;AACPgB,IAAAA,aAAa,EAAE,KADR;AAEPC,IAAAA,SAAS,EAAE;AAFJ,GADsB;AAK/BT,EAAAA,QAAQ,EAAE;AACRU,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,iBAAiB,EAAE,GAFX;AAGRC,IAAAA,SAAS,EAAE,QAHH;AAIRC,IAAAA,QAAQ,EAAE;AAJF;AALqB,CAAlB,CAAf","sourcesContent":["import React, { useState, createRef, RefObject } from 'react';\nimport { View, StyleSheet, TextInput, TextStyle } from 'react-native';\nimport { colors } from '../colors';\nimport FormItem from './FormItem';\n\ninterface Props {\n  numOfInput: number;\n  onChangeText: (pin: string) => void;\n  textInputStyle?: TextStyle;\n}\n\nconst refs: RefObject<TextInput>[] = [];\nexport default function PinInput(props: Props) {\n  const [pin, setPin] = useState(Array(props.numOfInput).fill(''));\n  const [activeInput, setActiveInput] = useState(0);\n  if (!refs.length) {\n    for (let i = 0; i < pin.length; i++) {\n      refs.push(createRef());\n    }\n  }\n\n  const changeFocus = (index: number, text: string) => {\n    if (text) refs[index + 1]?.current?.focus();\n    else refs[index - 1]?.current?.focus();\n  };\n\n  return (\n    <View style={styles.wrapper}>\n      {pin.map((_, index) => (\n        <FormItem\n          value={pin[index]}\n          style={{ backgroundColor: 'transparent', flex: 1 }}\n          onChangeText={(text) => {\n            pin[index] = text;\n            setPin([...pin]);\n            changeFocus(index, text);\n            props.onChangeText(pin.toString().replace(/,/g, ''));\n          }}\n          textInputStyle={[\n            styles.formItem,\n            {\n              borderBottomColor:\n                activeInput === index ? colors.black : colors.lightgrey,\n            },\n            props.textInputStyle,\n          ]}\n          maxLength={1}\n          key={index}\n          ref={refs[index]}\n          onFocus={() => setActiveInput(index)}\n        />\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    alignSelf: 'center',\n  },\n  formItem: {\n    maxWidth: 40,\n    borderBottomWidth: 1.5,\n    textAlign: 'center',\n    fontSize: 20,\n  },\n});\n"]}