{"version":3,"sources":["FormItem.tsx"],"names":["wrapperHeight","FormItem","children","props","ref","hasError","setHasError","status","message","animatedBottom","Animated","Value","shouldAnimate","setShouldAnimate","isRequired","value","keyboardType","inputRef","setState","validation","customValidation","containsError","focus","current","blur","clear","isFocused","getComponent","handleBlur","e","onBlur","handleFocus","floatingLabel","timing","toValue","useNativeDriver","duration","start","onFocus","styles","wrapper","style","borderColor","colors","red","borderWidth","undefined","nativeEvent","layout","height","label","asterik","marginLeft","marginBottom","marginHorizontal","labelStyle","position","bottom","backgroundColor","interpolate","inputRange","outputRange","white","floatingInputWrapper","inputText","textInputStyle","autoCapitalize","maxLength","errorWrapper","exclamation","underneathText","underneathTextStyle","zIndex","validateEmail","email","test","validateNumber","number","validateDecimalNumber","endsWith","validatePhoneNumber","replace","extraValidation","StyleSheet","create","flexDirection","borderRadius","paddingHorizontal","minHeight","alignItems","flex","paddingVertical","Platform","select","web","outlineWidth","marginTop","color","width","justifyContent","fontSize","fontWeight","paddingRight"],"mappings":"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","sourcesContent":["import React, {\n  forwardRef,\n  useState,\n  useImperativeHandle,\n  useRef,\n  RefObject,\n  ComponentProps,\n  ReactNode,\n} from 'react';\nimport {\n  TextInput,\n  View,\n  StyleSheet,\n  Text,\n  NativeSyntheticEvent,\n  TextInputFocusEventData,\n  KeyboardTypeOptions,\n  Animated,\n  Platform,\n} from 'react-native';\n\nimport Label from '../components/Label';\nimport { colors } from '../colors';\n\ntype Validation = { status: boolean; message: string };\n\ninterface Props extends ComponentProps<typeof TextInput> {\n  textInputStyle?: object | object[];\n  children?: ReactNode;\n  underneathText?: string;\n  underneathTextStyle?: object | object[];\n  label?: string;\n  labelStyle?: object | object[];\n  isRequired?: boolean;\n  value: string;\n  customValidation?: () => Validation;\n  asterik?: boolean;\n  ref: RefObject<TextInput>;\n  floatingLabel?: boolean;\n}\n\nlet wrapperHeight = 0;\n\nconst FormItem = forwardRef(({ children, ...props }: Props, ref: any) => {\n  const [hasError, setHasError] = useState({ status: false, message: '' });\n  const [animatedBottom] = useState(new Animated.Value(0));\n  const [shouldAnimate, setShouldAnimate] = useState(true);\n  const { isRequired, value, keyboardType } = props;\n  const inputRef: any = useRef();\n\n  useImperativeHandle(ref, () => ({\n    setState: () => {\n      let validation;\n      if (props.customValidation) validation = props.customValidation();\n      setHasError(containsError(keyboardType, isRequired!, value, validation));\n    },\n    focus: () => inputRef.current.focus(),\n    blur: () => inputRef.current.blur(),\n    clear: () => inputRef.current.clear(),\n    isFocused: () => inputRef.current.isFocused(),\n    getComponent: () => 'FormItem',\n  }));\n\n  const handleBlur = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    let validation;\n    if (props.customValidation) validation = props.customValidation();\n    setHasError(containsError(keyboardType, isRequired!, value, validation));\n    if (props.onBlur) props.onBlur(e);\n  };\n\n  const handleFocus = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    setHasError({ status: false, message: '' });\n    if (props.floatingLabel && shouldAnimate)\n      Animated.timing(animatedBottom, {\n        toValue: wrapperHeight / 2,\n        useNativeDriver: false,\n        duration: 300,\n      }).start(() => setShouldAnimate(false));\n\n    if (props.onFocus) props.onFocus(e);\n  };\n\n  if (props.floatingLabel) {\n    return (\n      <>\n        <View\n          style={[\n            styles.wrapper,\n            props.style,\n            hasError.status\n              ? { borderColor: colors.red, borderWidth: 1 }\n              : undefined,\n          ]}\n          onLayout={({ nativeEvent }) =>\n            (wrapperHeight = nativeEvent.layout.height)\n          }\n        >\n          {props.label && (\n            <Label\n              text={props.label}\n              textStyle={[\n                !props.asterik ? { marginLeft: 4 } : undefined,\n                props.floatingLabel\n                  ? { marginBottom: 0, marginHorizontal: 8 }\n                  : undefined,\n                props.labelStyle,\n              ]}\n              asterik={props.asterik}\n              style={{\n                position: 'relative',\n                bottom: animatedBottom,\n                backgroundColor: animatedBottom.interpolate({\n                  inputRange: [0, wrapperHeight / 2],\n                  outputRange: ['transparent', colors.white],\n                }),\n              }}\n            />\n          )}\n\n          <View style={styles.floatingInputWrapper}>\n            {children}\n            <TextInput\n              {...props}\n              style={[styles.inputText, props.textInputStyle]}\n              ref={inputRef}\n              onBlur={handleBlur}\n              onFocus={handleFocus}\n              value={props.value}\n              autoCapitalize={\n                props.autoCapitalize ||\n                (props.keyboardType == 'email-address' ? 'none' : undefined)\n              }\n              maxLength={props.maxLength || 150}\n              placeholder=\"\"\n            />\n            {hasError.status && (\n              <View style={styles.errorWrapper}>\n                <Text style={styles.exclamation}>{'\\u0021'}</Text>\n              </View>\n            )}\n          </View>\n        </View>\n\n        {hasError.status && (\n          <Text style={[styles.underneathText, props.underneathTextStyle]}>\n            {props.underneathText || hasError.message}\n          </Text>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <>\n      {props.label && (\n        <Label\n          text={props.label}\n          style={[\n            styles.label,\n            !props.asterik ? { marginLeft: 4 } : undefined,\n            props.floatingLabel\n              ? { marginBottom: -10, marginLeft: 16, zIndex: 1 }\n              : undefined,\n            props.labelStyle,\n          ]}\n          asterik={props.asterik}\n        />\n      )}\n      <View\n        style={[\n          styles.wrapper,\n          props.style,\n          hasError.status\n            ? { borderColor: colors.red, borderWidth: 1 }\n            : undefined,\n        ]}\n      >\n        {children}\n        <TextInput\n          {...props}\n          style={[styles.inputText, props.textInputStyle]}\n          ref={inputRef}\n          onBlur={handleBlur}\n          onFocus={handleFocus}\n          value={props.value}\n          autoCapitalize={\n            props.autoCapitalize ||\n            (props.keyboardType == 'email-address' ? 'none' : undefined)\n          }\n          maxLength={props.maxLength || 150}\n        />\n        {hasError.status && (\n          <View style={styles.errorWrapper}>\n            <Text style={styles.exclamation}>{'\\u0021'}</Text>\n          </View>\n        )}\n      </View>\n\n      {hasError.status && (\n        <Text style={[styles.underneathText, props.underneathTextStyle]}>\n          {props.underneathText || hasError.message}\n        </Text>\n      )}\n    </>\n  );\n});\n\nconst validateEmail = (email: string) => {\n  return /^\\S+@\\S+\\.\\S+$/.test(email);\n};\n\nconst validateNumber = (number: string) => {\n  return /^\\d+$/.test(number);\n};\n\nconst validateDecimalNumber = (number: string) => {\n  return /^\\d+.*\\d*/.test(number) && !number.endsWith('.');\n};\n\nconst validatePhoneNumber = (number: string) =>\n  /^\\+{0,1}\\d+$/.test(number.replace(/ /g, ''));\n\nexport const containsError = (\n  keyboardType: KeyboardTypeOptions = 'default',\n  isRequired: boolean,\n  value: string,\n  extraValidation?: Validation\n) => {\n  if (extraValidation && !extraValidation.status) {\n    return {\n      status: true,\n      message: extraValidation.message,\n    };\n  } else if (extraValidation && extraValidation.status) {\n    return { status: false, message: '' };\n  }\n\n  if (keyboardType == 'email-address' && !validateEmail(value))\n    return { status: true, message: 'Enter a valid email' };\n  if (isRequired && !value) return { status: true, message: 'Cannot be empty' };\n  if (\n    keyboardType == 'number-pad' ||\n    (keyboardType == 'numeric' && !validateNumber(value))\n  )\n    return { status: true, message: 'Invalid number' };\n  if (keyboardType == 'phone-pad' && !validatePhoneNumber(value))\n    return { status: true, message: 'Invalid phone number' };\n  if (keyboardType == 'decimal-pad' && !validateDecimalNumber(value))\n    return { status: true, message: 'Invalid number' };\n\n  return { status: false, message: '' };\n};\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 5,\n    paddingHorizontal: 8,\n    minHeight: 48,\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  inputText: {\n    flex: 1,\n    paddingVertical: 8,\n    ...Platform.select({ web: { outlineWidth: 0 } }),\n  },\n  underneathText: {\n    marginTop: -24,\n    marginLeft: 8,\n    marginBottom: 24,\n    color: colors.red,\n  },\n  label: {\n    marginBottom: 2,\n  },\n  errorWrapper: {\n    height: 30,\n    width: 30,\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.red,\n  },\n  exclamation: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  floatingInputWrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%',\n    position: 'absolute',\n    marginLeft: 16,\n    paddingRight: 8,\n  },\n});\n\nexport default FormItem;\n"]}