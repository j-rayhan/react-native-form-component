{"version":3,"sources":["index.tsx"],"names":["FormItem","children","props","ref","hasError","setHasError","status","message","animatedBottom","Animated","Value","shouldAnimate","setShouldAnimate","wrapperHeight","setWrapperHeight","isRequired","value","keyboardType","inputRef","setState","validation","customValidation","containsError","focus","current","blur","clear","isFocused","getComponent","handleBlur","e","onBlur","handleFocus","floatingLabel","timing","toValue","textArea","useNativeDriver","duration","start","onFocus","styles","wrapper","height","alignItems","undefined","style","borderColor","colors","red","borderWidth","nativeEvent","layout","label","asterik","marginLeft","labelStyle","bottom","paddingHorizontal","backgroundColor","interpolate","inputRange","outputRange","white","marginTop","marginBottom","flex","position","right","left","inputText","textInputStyle","autoCapitalize","maxLength","multiline","errorWrapper","exclamation","underneathText","underneathTextStyle","validateEmail","email","test","validateNumber","number","validateDecimalNumber","endsWith","validatePhoneNumber","replace","extraValidation","StyleSheet","create","flexDirection","borderRadius","paddingVertical","Platform","select","web","outlineWidth","color","width","justifyContent","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, {\n  forwardRef,\n  useState,\n  useImperativeHandle,\n  useRef,\n  ComponentProps,\n  ReactNode,\n} from 'react';\nimport {\n  TextInput,\n  View,\n  StyleSheet,\n  Text,\n  NativeSyntheticEvent,\n  TextInputFocusEventData,\n  KeyboardTypeOptions,\n  Animated,\n  Platform,\n} from 'react-native';\n\nimport Label from '../Label';\nimport { colors } from '../../colors';\n\ntype Validation = { status: boolean; message: string };\n\ninterface Props extends ComponentProps<typeof TextInput> {\n  textInputStyle?: object | object[];\n  children?: ReactNode;\n  underneathText?: string;\n  underneathTextStyle?: object | object[];\n  label?: string;\n  labelStyle?: object | object[];\n  isRequired?: boolean;\n  value: string;\n  customValidation?: () => Validation;\n  asterik?: boolean;\n  floatingLabel?: boolean;\n  textArea?: boolean;\n}\n\nconst FormItem = forwardRef(({ children, ...props }: Props, ref: any) => {\n  const [hasError, setHasError] = useState({ status: false, message: '' });\n  const [animatedBottom] = useState(new Animated.Value(0));\n  const [shouldAnimate, setShouldAnimate] = useState(true);\n  const [wrapperHeight, setWrapperHeight] = useState(0);\n  const { isRequired, value, keyboardType } = props;\n  const inputRef: any = useRef();\n\n  useImperativeHandle(ref, () => ({\n    setState: () => {\n      let validation;\n      if (props.customValidation) validation = props.customValidation();\n      setHasError(containsError(keyboardType, isRequired!, value, validation));\n    },\n    focus: () => inputRef.current.focus(),\n    blur: () => inputRef.current.blur(),\n    clear: () => inputRef.current.clear(),\n    isFocused: () => inputRef.current.isFocused(),\n    getComponent: () => 'FormItem',\n  }));\n\n  const handleBlur = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    let validation;\n    if (props.customValidation) validation = props.customValidation();\n    setHasError(containsError(keyboardType, isRequired!, value, validation));\n    if (props.onBlur) props.onBlur(e);\n  };\n\n  const handleFocus = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    setHasError({ status: false, message: '' });\n    if (props.floatingLabel && shouldAnimate)\n      Animated.timing(animatedBottom, {\n        toValue: props.textArea ? 24 : wrapperHeight / 2,\n        useNativeDriver: false,\n        duration: 300,\n      }).start(() => setShouldAnimate(false));\n\n    if (props.onFocus) props.onFocus(e);\n  };\n\n  if (props.floatingLabel) {\n    return (\n      <>\n        <View\n          style={[\n            styles.wrapper,\n            props.textArea\n              ? { height: 120, alignItems: 'flex-start' }\n              : undefined,\n            props.style,\n            hasError.status\n              ? { borderColor: colors.red, borderWidth: 1 }\n              : undefined,\n          ]}\n          onLayout={({ nativeEvent }) =>\n            setWrapperHeight(nativeEvent.layout.height)\n          }\n        >\n          {props.label && (\n            <Label\n              text={props.label}\n              textStyle={[\n                !props.asterik ? { marginLeft: 4 } : undefined,\n                props.labelStyle,\n              ]}\n              asterik={props.asterik}\n              style={[\n                props.floatingLabel ? { bottom: animatedBottom } : undefined,\n                {\n                  paddingHorizontal: 2,\n                  backgroundColor: animatedBottom.interpolate({\n                    inputRange: [0, props.textArea ? 24 : wrapperHeight / 2],\n                    outputRange: ['transparent', colors.white],\n                  }),\n                  marginTop: props.textArea ? 16 : 0,\n                },\n              ]}\n            />\n          )}\n\n          <View\n            style={[\n              styles.wrapper,\n              {\n                marginBottom: 0,\n                flex: 1,\n                paddingHorizontal: 0,\n                height: '100%',\n                position: 'absolute',\n                right: 8,\n                left: 8,\n                backgroundColor: 'transparent',\n              },\n            ]}\n          >\n            {children}\n            <TextInput\n              {...props}\n              style={[styles.inputText, props.textInputStyle]}\n              ref={inputRef}\n              onBlur={handleBlur}\n              onFocus={handleFocus}\n              value={props.value}\n              autoCapitalize={\n                props.autoCapitalize ||\n                (props.keyboardType == 'email-address' ? 'none' : undefined)\n              }\n              maxLength={props.maxLength || 150}\n              placeholder=\"\"\n              multiline={props.textArea || props.multiline}\n              textAlignVertical={props.textArea ? 'top' : 'center'}\n              testID=\"input\"\n            />\n            {hasError.status && (\n              <View style={styles.errorWrapper}>\n                <Text style={styles.exclamation}>{'\\u0021'}</Text>\n              </View>\n            )}\n          </View>\n        </View>\n\n        {hasError.status && (\n          <Text style={[styles.underneathText, props.underneathTextStyle]}>\n            {props.underneathText || hasError.message}\n          </Text>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <>\n      {props.label && (\n        <Label\n          text={props.label}\n          textStyle={[\n            styles.label,\n            !props.asterik ? { marginLeft: 4 } : undefined,\n            props.labelStyle,\n          ]}\n          asterik={props.asterik}\n        />\n      )}\n      <View\n        style={[\n          styles.wrapper,\n          props.textArea ? { height: 120 } : undefined,\n          props.style,\n          hasError.status\n            ? { borderColor: colors.red, borderWidth: 1 }\n            : undefined,\n        ]}\n      >\n        {children}\n        <TextInput\n          {...props}\n          style={[styles.inputText, props.textInputStyle]}\n          ref={inputRef}\n          onBlur={handleBlur}\n          onFocus={handleFocus}\n          value={props.value}\n          autoCapitalize={\n            props.autoCapitalize ||\n            (props.keyboardType == 'email-address' ? 'none' : undefined)\n          }\n          maxLength={props.maxLength || 150}\n          multiline={props.textArea || props.multiline}\n          textAlignVertical={props.textArea ? 'top' : 'center'}\n          testID=\"input\"\n        />\n        {hasError.status && (\n          <View style={styles.errorWrapper}>\n            <Text style={styles.exclamation}>{'\\u0021'}</Text>\n          </View>\n        )}\n      </View>\n\n      {hasError.status && (\n        <Text style={[styles.underneathText, props.underneathTextStyle]}>\n          {props.underneathText || hasError.message}\n        </Text>\n      )}\n    </>\n  );\n});\n\nconst validateEmail = (email: string) => {\n  return /^\\S+@\\S+\\.\\S+$/.test(email);\n};\n\nconst validateNumber = (number: string) => {\n  return /^\\d+$/.test(number);\n};\n\nconst validateDecimalNumber = (number: string) => {\n  return /^\\d+.*\\d*/.test(number) && !number.endsWith('.');\n};\n\nconst validatePhoneNumber = (number: string) =>\n  /^\\+{0,1}\\d+$/.test(number.replace(/ /g, ''));\n\nexport const containsError = (\n  keyboardType: KeyboardTypeOptions = 'default',\n  isRequired: boolean,\n  value: string,\n  extraValidation?: Validation\n) => {\n  if (extraValidation && !extraValidation.status) {\n    return {\n      status: true,\n      message: extraValidation.message,\n    };\n  } else if (extraValidation && extraValidation.status) {\n    return { status: false, message: '' };\n  }\n\n  if (keyboardType == 'email-address' && !validateEmail(value))\n    return { status: true, message: 'Enter a valid email' };\n  if (isRequired && !value) return { status: true, message: 'Cannot be empty' };\n  if (\n    keyboardType == 'number-pad' ||\n    (keyboardType == 'numeric' && !validateNumber(value))\n  )\n    return { status: true, message: 'Invalid number' };\n  if (keyboardType == 'phone-pad' && !validatePhoneNumber(value))\n    return { status: true, message: 'Invalid phone number' };\n  if (keyboardType == 'decimal-pad' && !validateDecimalNumber(value))\n    return { status: true, message: 'Invalid number' };\n\n  return { status: false, message: '' };\n};\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 5,\n    paddingHorizontal: 8,\n    height: 48,\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  inputText: {\n    flex: 1,\n    paddingVertical: 8,\n    ...Platform.select({ web: { outlineWidth: 0 } }),\n    height: '90%',\n  },\n  underneathText: {\n    marginTop: -24,\n    marginLeft: 8,\n    marginBottom: 24,\n    color: colors.red,\n  },\n  label: {\n    marginBottom: 2,\n  },\n  errorWrapper: {\n    height: 30,\n    width: 30,\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.red,\n  },\n  exclamation: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n});\n\nexport default FormItem;\n"]}