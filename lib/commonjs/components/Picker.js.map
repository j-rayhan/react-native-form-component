{"version":3,"sources":["Picker.tsx"],"names":["button","Picker","props","selectedValue","setSelectedValue","showPicker","setShowPicker","position","setPosition","y","width","height","label","labelStyle","labelWrapperStyle","asterik","asterikStyle","styles","pickerButton","buttonStyle","nativeEvent","layout","maxWidth","selectedValueStyle","items","filter","item","value","placeholder","childIconWrapper","iconWrapperStyle","pickerIcon","StyleSheet","absoluteFillObject","elevation","wrapper","top","map","backgroundColor","colors","blue","onSelection","itemLabelStyle","color","white","text","create","borderRadius","zIndex","maxHeight","flexGrow","borderWidth","borderColor","lightBlue","shadowColor","lightgrey","shadowOffset","shadowOpacity","shadowRadius","paddingVertical","paddingHorizontal","flexDirection","alignItems","justifyContent","paddingLeft","marginBottom","alignSelf","padding","borderTopRightRadius","borderBottomRightRadius","marginRight","borderTopColor","grey","borderTopWidth","borderLeftColor","borderRightColor","borderLeftWidth","borderRightWidth","borderBottomWidth"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  ReactText,\n  createRef,\n  RefObject,\n  ReactNode,\n} from 'react';\nimport { View, StyleSheet, Pressable, ScrollView, Text } from 'react-native';\n\nimport { colors } from '../colors';\nimport Label from './Label';\nimport Modal from './Modal';\n\ninterface Item {\n  label: string;\n  value: ReactText;\n}\n\ninterface Props {\n  items: Array<Item>;\n  onSelection: (item: Item) => void;\n  selectedValue: ReactText;\n  pickerIcon?: ReactNode;\n  iconWrapperStyle?: object | object[];\n  asterik?: boolean;\n  labelStyle?: object | object[];\n  asterikStyle?: object | object[];\n  label?: ReactText;\n  labelWrapperStyle?: object | object[];\n  placeholder?: string;\n  selectedValueStyle?: object | object[];\n  buttonStyle?: object | object[];\n  itemLabelStyle?: object | object[];\n}\n\nconst button: RefObject<View> = createRef();\nexport default function Picker(props: Props) {\n  const [selectedValue, setSelectedValue] = useState(props.selectedValue);\n  const [showPicker, setShowPicker] = useState(false);\n  const [position, setPosition] = useState({ y: 0, width: 0, height: 0 });\n  return (\n    <>\n      {props.label && (\n        <Label\n          text={props.label}\n          textStyle={props.labelStyle}\n          style={props.labelWrapperStyle}\n          asterik={props.asterik}\n          asterikStyle={props.asterikStyle}\n        />\n      )}\n      <Pressable\n        style={[styles.pickerButton, props.buttonStyle]}\n        onPress={() => {\n          setShowPicker(!showPicker);\n        }}\n        // @ts-ignore\n        ref={button}\n        onLayout={({ nativeEvent }) =>\n          setPosition({\n            height: nativeEvent.layout.height,\n            y: nativeEvent.layout.y,\n            width: nativeEvent.layout.width,\n          })\n        }\n      >\n        <Text\n          style={[{ maxWidth: '90%' }, props.selectedValueStyle]}\n          numberOfLines={1}\n        >\n          {props.items.filter((item) => item.value === props.selectedValue)[0]\n            ?.label ||\n            props.placeholder ||\n            '--Pick a value--'}\n        </Text>\n\n        <View style={[styles.childIconWrapper, props.iconWrapperStyle]}>\n          {props.pickerIcon || <View style={styles.pickerIcon} />}\n        </View>\n      </Pressable>\n\n      <Modal show={showPicker}>\n        <Pressable\n          style={{ ...StyleSheet.absoluteFillObject, elevation: 3 }}\n          onPress={() => setShowPicker(false)}\n        >\n          <ScrollView\n            style={[\n              styles.wrapper,\n              {\n                width: position.width,\n                position: 'absolute',\n                top: position.y + position.height + 8,\n              },\n            ]}\n            nestedScrollEnabled\n          >\n            {props.items.map((item) => (\n              <Pressable\n                key={item.value}\n                style={[\n                  styles.button,\n                  props.selectedValue === item.value\n                    ? { backgroundColor: colors.blue }\n                    : null,\n                ]}\n                onPress={() => {\n                  setSelectedValue(item.value);\n                  setShowPicker(false);\n                  props.onSelection(item);\n                }}\n              >\n                <Text\n                  style={[\n                    props.itemLabelStyle,\n                    {\n                      color:\n                        selectedValue === item.value\n                          ? colors.white\n                          : colors.text,\n                    },\n                  ]}\n                >\n                  {item.label}\n                </Text>\n              </Pressable>\n            ))}\n          </ScrollView>\n        </Pressable>\n      </Modal>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: colors.white,\n    borderRadius: 4,\n    zIndex: 1,\n    maxHeight: 200,\n    flexGrow: 0,\n    borderWidth: 0.5,\n    borderColor: colors.lightBlue,\n    elevation: 4,\n    shadowColor: colors.lightgrey,\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 1,\n    shadowRadius: 4,\n  },\n  button: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  pickerButton: {\n    borderRadius: 4,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 8,\n    marginBottom: 24,\n    height: 44,\n    backgroundColor: colors.white,\n  },\n  childIconWrapper: {\n    backgroundColor: colors.white,\n    alignSelf: 'stretch',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    padding: 8,\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    marginRight: 8,\n  },\n  pickerIcon: {\n    borderTopColor: colors.grey,\n    borderTopWidth: 10,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    borderLeftWidth: 9,\n    borderRightWidth: 9,\n    borderBottomWidth: 0,\n    borderRadius: 4,\n  },\n});\n"]}