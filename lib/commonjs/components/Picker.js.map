{"version":3,"sources":["Picker.tsx"],"names":["Picker","props","selectedValue","setSelectedValue","showPicker","setShowPicker","position","setPosition","x","y","width","height","animatedBottom","setAnimatedBottom","Animated","Value","shouldAnimate","setShouldAnimate","pickerRef","handlePress","floatingLabel","timing","toValue","useNativeDriver","duration","start","current","measureInWindow","label","labelStyle","labelWrapperStyle","asterik","asterikStyle","styles","pickerButton","buttonStyle","nativeEvent","layout","bottom","paddingHorizontal","backgroundColor","interpolate","inputRange","outputRange","colors","white","maxWidth","opacity","selectedValueStyle","items","filter","item","value","placeholder","childIconWrapper","iconWrapperStyle","pickerIcon","StyleSheet","absoluteFillObject","elevation","wrapper","top","left","map","button","blue","onSelection","itemLabelStyle","color","text","create","borderRadius","zIndex","maxHeight","flexGrow","borderWidth","borderColor","lightBlue","shadowColor","lightgrey","shadowOffset","shadowOpacity","shadowRadius","paddingVertical","flexDirection","alignItems","justifyContent","paddingLeft","marginBottom","alignSelf","padding","borderTopRightRadius","borderBottomRightRadius","marginRight","borderTopColor","grey","borderTopWidth","borderLeftColor","borderRightColor","borderLeftWidth","borderRightWidth","borderBottomWidth"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  ReactText,\n  ReactNode,\n  RefObject,\n  useRef,\n  useEffect,\n} from 'react';\nimport {\n  View,\n  StyleSheet,\n  Pressable,\n  ScrollView,\n  Text,\n  Animated,\n} from 'react-native';\n\nimport { colors } from '../colors';\nimport Label from './Label';\nimport Modal from './Modal';\n\ninterface Item {\n  label: string;\n  value: ReactText;\n}\n\ninterface Props {\n  items: Array<Item>;\n  onSelection: (item: Item) => void;\n  selectedValue: ReactText;\n  pickerIcon?: ReactNode;\n  iconWrapperStyle?: object | object[];\n  asterik?: boolean;\n  labelStyle?: object | object[];\n  asterikStyle?: object | object[];\n  label?: ReactText;\n  labelWrapperStyle?: object | object[];\n  placeholder?: string;\n  selectedValueStyle?: object | object[];\n  buttonStyle?: object | object[];\n  itemLabelStyle?: object | object[];\n  floatingLabel?: boolean;\n}\n\nexport default function Picker(props: Props) {\n  const [selectedValue, setSelectedValue] = useState(props.selectedValue);\n  const [showPicker, setShowPicker] = useState(false);\n  const [position, setPosition] = useState({ x: 0, y: 0, width: 0, height: 0 });\n  const [animatedBottom, setAnimatedBottom] = useState(new Animated.Value(0));\n  const [shouldAnimate, setShouldAnimate] = useState(true);\n\n  const pickerRef: RefObject<View> = useRef() as RefObject<View>;\n\n  const handlePress = () => {\n    if (props.floatingLabel && shouldAnimate)\n      Animated.timing(animatedBottom, {\n        toValue: position.height - 10,\n        useNativeDriver: false,\n        duration: 300,\n      }).start(() => setShouldAnimate(false));\n\n    if (!showPicker)\n      pickerRef.current?.measureInWindow(\n        (x: number, y: number, width: number, height: number) => {\n          setPosition({ x, y, width, height });\n        }\n      );\n    setShowPicker(!showPicker);\n  };\n\n  useEffect(() => {\n    if (props.floatingLabel && props.selectedValue)\n      Animated.timing(animatedBottom, {\n        toValue: position.height - 10,\n        useNativeDriver: false,\n        duration: 300,\n      }).start(() => setShouldAnimate(false));\n  }, [shouldAnimate]);\n\n  return (\n    <>\n      {props.label && !props.floatingLabel && (\n        <Label\n          text={props.label}\n          textStyle={props.labelStyle}\n          style={props.labelWrapperStyle}\n          asterik={props.asterik}\n          asterikStyle={props.asterikStyle}\n        />\n      )}\n      <Pressable\n        style={[styles.pickerButton, props.buttonStyle]}\n        onPress={handlePress}\n        ref={pickerRef}\n        onLayout={({ nativeEvent }) => {\n          setPosition({ ...position, height: nativeEvent.layout.height });\n          setAnimatedBottom(new Animated.Value(nativeEvent.layout.height / 4));\n        }}\n      >\n        {props.floatingLabel && props.label && (\n          <Label\n            text={props.label}\n            textStyle={props.labelStyle}\n            style={[\n              props.labelWrapperStyle,\n              {\n                position: 'absolute',\n                bottom: animatedBottom,\n                paddingHorizontal: 2,\n                backgroundColor: animatedBottom.interpolate({\n                  inputRange: [0, position.height / 3, position.height / 2],\n                  outputRange: ['transparent', 'transparent', colors.white],\n                }),\n              },\n            ]}\n            asterik={props.asterik}\n            asterikStyle={props.asterikStyle}\n          />\n        )}\n\n        <Text\n          style={[\n            {\n              maxWidth: '90%',\n              opacity: props.floatingLabel && shouldAnimate ? 0 : 1,\n            },\n            props.selectedValueStyle,\n          ]}\n          numberOfLines={1}\n        >\n          {props.items.filter((item) => item.value === props.selectedValue)[0]\n            ?.label ||\n            props.placeholder ||\n            '--Pick a value--'}\n        </Text>\n\n        <View style={[styles.childIconWrapper, props.iconWrapperStyle]}>\n          {props.pickerIcon || <View style={styles.pickerIcon} />}\n        </View>\n      </Pressable>\n\n      <Modal show={showPicker}>\n        <Pressable\n          style={{ ...StyleSheet.absoluteFillObject, elevation: 3 }}\n          onPress={() => setShowPicker(false)}\n        >\n          <ScrollView\n            style={[\n              styles.wrapper,\n              {\n                width: position.width,\n                position: 'absolute',\n                top: position.y + position.height + 8,\n                left: position.x,\n              },\n            ]}\n            nestedScrollEnabled\n          >\n            {props.items.map((item) => (\n              <Pressable\n                key={item.value}\n                style={[\n                  styles.button,\n                  props.selectedValue === item.value\n                    ? { backgroundColor: colors.blue }\n                    : null,\n                ]}\n                onPress={() => {\n                  setSelectedValue(item.value);\n                  setShowPicker(false);\n                  props.onSelection(item);\n                }}\n              >\n                <Text\n                  style={[\n                    props.itemLabelStyle,\n                    {\n                      color:\n                        selectedValue === item.value\n                          ? colors.white\n                          : colors.text,\n                    },\n                  ]}\n                >\n                  {item.label}\n                </Text>\n              </Pressable>\n            ))}\n          </ScrollView>\n        </Pressable>\n      </Modal>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: colors.white,\n    borderRadius: 4,\n    zIndex: 1,\n    maxHeight: 200,\n    flexGrow: 0,\n    borderWidth: 0.5,\n    borderColor: colors.lightBlue,\n    elevation: 4,\n    shadowColor: colors.lightgrey,\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 1,\n    shadowRadius: 4,\n  },\n  button: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  pickerButton: {\n    borderRadius: 4,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 8,\n    marginBottom: 24,\n    height: 44,\n    backgroundColor: colors.white,\n  },\n  childIconWrapper: {\n    backgroundColor: colors.white,\n    alignSelf: 'stretch',\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    padding: 8,\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    marginRight: 8,\n  },\n  pickerIcon: {\n    borderTopColor: colors.grey,\n    borderTopWidth: 10,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    borderLeftWidth: 9,\n    borderRightWidth: 9,\n    borderBottomWidth: 0,\n    borderRadius: 4,\n  },\n});\n"]}